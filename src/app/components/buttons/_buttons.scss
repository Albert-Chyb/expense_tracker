@use '../../sass/themes/theme';

// Mixin for buttons that their normal state has no background.
@mixin empty-bg-theme($color-name) {
	--bg-color: hsla(var(--text-color-hsl), 0);
	--bg-on-hover-color: hsla(var(--text-color-hsl), 0.1);
	--font-color: var(--text-color-0);

	&--#{$color-name} {
		--bg-color: hsla(#{theme.get-color($color-name, 'hsl')}, 0);
		--font-color: hsla(#{theme.get-color($color-name, 'hsl')}, 1);
		--bg-on-hover-color: hsla(#{theme.get-color($color-name, 'hsl')}, 0.1);
	}
}

// Mixin for buttons that their normal state has a solid background.
@mixin solid-bg-theme($color-name) {
	--bg-color: var(--bg-color-12);
	--bg-on-hover-color: var(--bg-color);
	--font-color: var(--text-color-0);

	&--#{$color-name} {
		--bg-color: #{theme.get-color($color-name, '0')};
		--bg-on-hover-color: #{theme.get-color($color-name, '0')};
		--font-color: var(--text-on-#{$color-name});
	}
}

// Base styles for every button
%button {
	--bg-color: transparent;
	--bg-on-hover-color: transparent;
	--font-color: inherit;
	--border: none;

	background-color: var(--bg-color);
	color: var(--font-color);
	border: var(--border);

	padding: rem(10px) rem(15px);
	border-radius: rem(3px);
	cursor: pointer;
	outline: none;
	user-select: none;
	font: {
		size: rem(14px);
		weight: 700;
	}

	&[disabled] {
		cursor: default;
		opacity: 0.3;

		&:hover {
			background-color: var(--bg-color);
		}
	}

	&:hover {
		background-color: var(--bg-on-hover-color);
	}

	&:link,
	&:visited,
	&:hover {
		color: var(--font-color);
	}

	// Font awesome somehow breaks the offset property present in the click event in JS.
	// Setting removing pointer events from the icon inside the button fixes this issue.
	& i[class^='fa'] {
		pointer-events: none;
	}

	&:is(a) {
		display: inline-block;
	}
}

// A button that is completely empty with no special effects.
.none-btn {
	background-color: transparent;
	color: inherit;
	font-family: inherit;
	border: none;
	cursor: pointer;
	outline: none;
}

// Empty background buttons
.icon-btn,
.basic-btn,
.stroked-btn {
	@extend %button;

	@each $name in theme.get-colors-names() {
		@include empty-bg-theme($name);
	}
}

.stroked-btn {
	--border: #{rem(1px)} solid var(--text-color-3);
}

.icon-btn {
	$size: rem(45px);

	padding: 0px;
	border-radius: 50%;
	height: $size;
	width: $size;
	line-height: $size;
	text-align: center;
}

// Solid background buttons
.filled-btn,
.fab-btn {
	@extend %button;

	@each $name in theme.get-colors-names() {
		@include solid-bg-theme($name);
	}
}

.fab-btn {
	$size: rem(65px);

	border-radius: 50%;
	width: $size;
	height: $size;
	line-height: $size;
	text-align: center;
	padding: 0px;
	font-size: rem(22px);
}

// Auth buttons
.google-btn {
	@extend .none-btn;
	--logo-size: #{rem(38px)};

	background-color: #4285f4;
	font-weight: 500;
	font-size: rem(14px);
	letter-spacing: rem(0.22px);
	border-radius: rem(2px);
	height: rem(40px);
	min-width: rem(185px);
	text-align: center;
	position: relative;
	padding-left: var(--logo-size);
	color: #fff;

	&[disabled] {
		background-color: #d9d9d9;
		color: rgb(141, 141, 141);

		&::after {
			background-image: url('/assets/logos/google/btn_google_dark_disabled_ios.svg');
		}
	}

	&::after {
		position: absolute;
		content: '';
		background: {
			image: url('/assets/logos/google/btn_google_dark_normal_ios.svg');
			position: center;
			repeat: no-repeat;
		}
		height: rem(40px);
		width: rem(40px);
		top: 0px;
		left: 0px;
	}

	&:active {
		background-color: #3367d6;

		&::after {
			background-image: url('/assets/logos/google/btn_google_dark_pressed_ios.svg');
		}
	}
}
